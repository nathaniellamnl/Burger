{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Auxilliary/Auxilliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/order.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","registerServiceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Open","Close","closed","join","Layout","state","showSideDrawer","sideDrawerToggleHandler","setState","prevState","sideDrawerCloseHandler","this","Content","Component","BurgerIngredients","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","display","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","purchaseBurger","orderData","dispatch","post","then","id","orderId","purchaseBurgerSuccess","data","name","catch","purchaseBurgerFail","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","burgerBuilder","totalPrice","ingName","ingredientName","get","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","validationError","ValidationError","valueType","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","placeholder","validation","required","valid","street","zipCode","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","minLength","formElementsArray","config","form","onSubmit","formElement","loading","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchased","purchaseRedirect","path","match","component","amount","ingredientOutput","ig","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","err","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","fetchIngredientsFailed","setIngredients","reducer","purchaseInit","purchaseBurgerStart","purhcaseBurgerSuccess","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.64e4e14c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__3KYc7\",\"BreadTop\":\"BurgerIngredients_BreadTop__oSAzt\",\"Seeds1\":\"BurgerIngredients_Seeds1__1oS00\",\"Seeds2\":\"BurgerIngredients_Seeds2__3TkAW\",\"Meat\":\"BurgerIngredients_Meat__9tgBG\",\"Cheese\":\"BurgerIngredients_Cheese__2ew82\",\"Salad\":\"BurgerIngredients_Salad__3-pli\",\"Bacon\":\"BurgerIngredients_Bacon__1EkkM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1Z8Z5\",\"Open\":\"SideDrawer_Open__2htaN\",\"Close\":\"SideDrawer_Close__1haRc\",\"Logo\":\"SideDrawer_Logo__26M8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3Az1C\",\"Label\":\"Input_Label__2DT5V\",\"InputElement\":\"Input_InputElement__2IJum\",\"Invalid\":\"Input_Invalid__bSz04\",\"ValidationError\":\"Input_ValidationError__2Umkx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__zCfne\",\"Label\":\"BuildControl_Label__5iCjz\",\"Less\":\"BuildControl_Less__3A6S7\",\"More\":\"BuildControl_More__2WAeJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__oTouO\",\"Logo\":\"Toolbar_Logo__1p4Iw\",\"DesktopOnly\":\"Toolbar_DesktopOnly__Y59Lq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3-7Hs\",\"active\":\"NavigationItem_active__1_XJm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__jcWfa\",\"OrderButton\":\"BuildControls_OrderButton__9rUuW\",\"enable\":\"BuildControls_enable__2FwhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3FRHC\",\"Success\":\"Button_Success__35POG\",\"Danger\":\"Button_Danger__3-63m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3KdDa\"};","module.exports = __webpack_public_path__ + \"static/media/burger.804fa877.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2_jtH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2X_dE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__4VB1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2W1zk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2m4_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1_Knl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__21eaQ\",\"load6\":\"Spinner_load6__cqOL4\",\"round\":\"Spinner_round__3rSSL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3RJf0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1vxDc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1Lvee\"};","const aux = (props) => props.children;\r\n\r\nexport default aux; ","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/images/burger.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"MyBurger\"/>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        {/* NavLink auto determines if it is active */}\r\n        <NavLink\r\n            exact={props.exact}\r\n            to={props.link}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxilliary/Auxilliary';\r\n\r\nconst sideDrawer = (props) => {\r\n\r\n    let attachedClasses;\r\n\r\n    if(props.show) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    } else {\r\n        attachedClasses = [classes.SideDrawer, classes.Close];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.show} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../Auxilliary/Auxilliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => { return { showSideDrawer: !prevState.showSideDrawer }; });\r\n    }\r\n    sideDrawerCloseHandler = () => {\r\n        this.setState({ showSideDrawer: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer show={this.state.showSideDrawer} closed={this.sideDrawerCloseHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredients.module.css';\r\n\r\nclass BurgerIngredients extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                )\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredients;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients'\r\n\r\nconst burger = (props) => {\r\n    console.log(props);\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n                                         .map(igKey => {\r\n                                             return [...new Array(props.ingredients[igKey])].map((_,i)=>{\r\n                                                return <BurgerIngredients key={igKey + i} type={igKey}/>;\r\n                                             });\r\n                                         })\r\n                                         .reduce((arr, el)=>{\r\n                                             return arr.concat(el)\r\n                                         }, []);\r\n    \r\n    if(transformedIngredients.length===0){\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className={classes.Burger}>\r\n            <BurgerIngredients type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredients type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>-</button>\r\n        <button className={classes.More} onClick={props.added}>+</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad'},\r\n    { label: 'Bacon', type: 'bacon'},\r\n    { label: 'Cheese', type: 'cheese'},\r\n    { label: 'Meat', type: 'meat'}\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl=> (\r\n            <BuildControl \r\n             key = {ctrl.label} \r\n             label = {ctrl.label}\r\n             added = {() => props.ingredientAdded(ctrl.type)} \r\n             removed = {() => props.ingredientRemoved(ctrl.type)}\r\n             disabled = {props.disabled[ctrl.type]}\r\n             />\r\n        ))}\r\n        <button \r\n        className = {classes.OrderButton}\r\n        disabled = {!props.purchasable}\r\n        onClick = {props.ordered}>ORDER</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxilliary/Auxilliary';\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n            <div\r\n                className={classes.Modal}\r\n                style={{\r\n                    display: this.props.show ? 'block':'none',\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0'\r\n                }}>\r\n                {this.props.children}\r\n            </div>\r\n        </Aux>\r\n        );       \r\n    };\r\n} \r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>\r\n        {props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxilliary/Auxilliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n    //this could be a functional component\r\n    componentDidUpdate() {\r\n        console.log('[OrderSummary] WillUpdate');\r\n    }\r\n\r\n    render() {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n            .map(igKey => {\r\n                return (\r\n                    <li key={igKey}>\r\n                        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                    </li>\r\n                );\r\n            });\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </Aux>\r\n        )\r\n    };\r\n};\r\n\r\nexport default OrderSummary;","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\nexport default spinner;","import Axios from 'axios';\r\nimport React, {Component} from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxilliary/Auxilliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n        \r\n        constructor () {\r\n            super();\r\n            // registering the interceptors\r\n             this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null})\r\n                return req;\r\n            });\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error =>{\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            console.log('Will Unmount!',this.reqInterceptor,this.resInterceptor);\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render () {\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    } \r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-app-cd7b3.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    console.log(\"purchaseBurgerSuccess\");\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json', orderData)\r\n            .then(response => {\r\n                console.log(\"Success\");\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n                console.log(\"Error: \" + error);\r\n                dispatch(purchaseBurgerFail(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    console.log('INitPurchase!!');\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrderSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json')\r\n        .then(res => {\r\n            const fetchedOrders = [];\r\n            for (let key in res.data) {\r\n                fetchedOrders.push({\r\n                    ...res.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            dispatch(fetchOrderSuccess(fetchedOrders))\r\n        })\r\n        .catch(err => {\r\n            dispatch(fetchOrdersFail(err));\r\n        });\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS'; \r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Auxilliary/Auxilliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        purchasing: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey]\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({ purchasing: true });\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.props.price}\r\n                    />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n            />\r\n        }\r\n\r\n        // {salad: true, meat: true}\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name,\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientFailded = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-app-cd7b3.firebaseio.com/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientFailded());\r\n            });\r\n    };\r\n};","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '300px', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    let validationError = null;\r\n    if (props.invalid && props.touched) {\r\n        validationError = <p className={classes.ValidationError}>Please enter a valid {props.valueType}!</p>;\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>);\r\n            break;\r\n        default:\r\n            inputElement = <input className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            {validationError}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fastest' },\r\n                        { value: 'cheapest', displayValue: 'Cheapest' }\r\n                    ],\r\n                    placeholder: 'Delivery Method'\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false,\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        //default is to send the request and reload the page\r\n        const formData = {};\r\n        for(let formElementIdentifier in this.state.orderForm) {\r\n            console.log(\"formdata:\"+this.state.orderForm[formElementIdentifier].value);\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n\r\n        this.props.onOrderBurger(order);\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n\r\n        if(!rules) {\r\n            return true;\r\n        }\r\n\r\n        if(rules.required) {\r\n            isValid = value.trim() !=='' && isValid;\r\n        }\r\n\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier]=updatedFormElement;\r\n\r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    } \r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input\r\n                        valueType={formElement.id}\r\n                        key={formElement.id}\r\n                        elementType = {formElement.config.elementType}\r\n                        elementConfig = {formElement.config.elementConfig}\r\n                        value = {formElement.config.value}\r\n                        invalid = {!formElement.config.valid}\r\n                        shouldValidate = {formElement.config.validation}\r\n                        touched = {formElement.config.touched}\r\n                        changed = {event => this.inputChangedHandler(event, formElement.id)}\r\n                    />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if (this.props.loading) {\r\n            form = <Spinner />;\r\n\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData'\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\" />\r\n        console.log(\"HIIHIHIH\");\r\n        console.log(this.props.purchased);\r\n        if (this.props.ings) {\r\n            const purchaseRedirect = this.props.purchased? <Redirect to=\"/\"/> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchaseRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler} />\r\n                    <Route\r\n                        path={this.props.match.path + '/contact-data'}\r\n                        component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            style={{ textTransform: 'capitalize',\r\n                     display: 'inline-block',\r\n                     margin: '0 8px',\r\n                     border: '1px solid #ccc',\r\n                     padding: '5px'   \r\n                   }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders();\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner/>;\r\n        if(!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order\r\n                    ingredients={order.ingredients}\r\n                    price={order.price}\r\n                    key={order.id} />\r\n            ))\r\n        }\r\n        return (\r\n            <div>\r\n               {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: () => dispatch(actions.fetchOrders()) \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\n\n{/* <BurgerBuilder/> \n          <Checkout/> */}\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Route path=\"/orders\" component={Orders}/>\n            <Route path=\"/checkout\" component={Checkout} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject(state, updatedState);\r\n}\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 };\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n    }\r\n    return updateObject(state, updatedSt);\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) =>{\r\n    return updateObject(state, { error: true });     \r\n}\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: true\r\n    });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return addIngredient(state, action);\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return setIngredients(state, action);\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, { purchased: false });\r\n};\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n}\r\n\r\nconst purhcaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, { id: action.orderId });\r\n            return updateObject(state, {\r\n                loading: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder)\r\n            });\r\n}\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, { loading: false });\r\n}\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n}\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    });  \r\n}\r\n\r\nconst fetchOrdersFail = (state,action) =>{\r\n    return updateObject(state, { loading: false });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return purchaseInit(state, action);\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return purchaseBurgerStart(state, action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            return purhcaseBurgerSuccess(state, action);\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return purchaseBurgerFail(state, action);\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return fetchOrdersStart(state, action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return fetchOrdersSuccess(state,action);\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return fetchOrdersFail(state,action);\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store} >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}